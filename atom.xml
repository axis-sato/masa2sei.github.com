<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Note]]></title>
  <link href="http://masa2sei.github.com/atom.xml" rel="self"/>
  <link href="http://masa2sei.github.com/"/>
  <updated>2013-02-22T17:48:55+09:00</updated>
  <id>http://masa2sei.github.com/</id>
  <author>
    <name><![CDATA[Your Masahiko Sato]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[UIPickerView]]></title>
    <link href="http://masa2sei.github.com/blog/2013/02/22/uipickerview/"/>
    <updated>2013-02-22T17:02:00+09:00</updated>
    <id>http://masa2sei.github.com/blog/2013/02/22/uipickerview</id>
    <content type="html"><![CDATA[<p>UIPickerViewを使ったときのメモ</p>

<!-- more -->


<p>ヘッダファイルにUIPickerViewDelegateプロトコルの宣言を追加する。</p>

<pre><code>    @interface ViewController : UIViewController
    &lt;UIPickerViewDelegate&gt;
</code></pre>

<p>実装ファイルに以下の記述を追加。</p>

<figure class='code'><figcaption><span> (ViewController.m)</span> <a href='http://masa2sei.github.com/downloads/code/2013-02-22-uipickerview/ViewController.m'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">NSArray</span><span class="o">*</span> <span class="n">categoryArray</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@synthesize</span> <span class="n">picker</span>      <span class="o">=</span> <span class="n">_picker</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  
</span><span class='line'>    <span class="c1">// pickerdelegateの設定</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">picker</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//カテゴリを配列に</span>
</span><span class='line'>    <span class="n">categoryArray</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSArray</span> <span class="nl">arrayWithObjects:</span>
</span><span class='line'>                     <span class="s">@&quot;Ambient&quot;</span><span class="p">,</span>
</span><span class='line'>                     <span class="s">@&quot;SoloAmbient&quot;</span><span class="p">,</span>
</span><span class='line'>                     <span class="s">@&quot;Playback&quot;</span><span class="p">,</span>
</span><span class='line'>                     <span class="s">@&quot;Record&quot;</span><span class="p">,</span>
</span><span class='line'>                     <span class="s">@&quot;PlayAndRecord&quot;</span><span class="p">,</span>
</span><span class='line'>                     <span class="s">@&quot;AudioProcessing&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">didReceiveMemoryWarning</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="n">didReceiveMemoryWarning</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// Dispose of any resources that can be recreated.</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// ピッカービューのコンポーネント（行）の数を返す *必須</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span> <span class="nf">numberOfComponentsInPickerView:</span><span class="p">(</span><span class="n">UIPickerView</span> <span class="o">*</span><span class="p">)</span><span class="nv">pickerView</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 行数を返す例　*必須</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span> <span class="nf">pickerView:</span> <span class="p">(</span><span class="n">UIPickerView</span><span class="o">*</span><span class="p">)</span><span class="nv">pView</span> <span class="nf">numberOfRowsInComponent:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span> <span class="n">component</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="p">[</span><span class="n">categoryArray</span> <span class="n">count</span><span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">cnt</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// ピッカービューの行のタイトルを返す</span>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="n">NSString</span><span class="o">*</span><span class="p">)</span><span class="nl">pickerView:</span> <span class="p">(</span><span class="n">UIPickerView</span><span class="o">*</span><span class="p">)</span> <span class="n">pView</span> <span class="nl">titleForRow:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span> <span class="n">row</span> <span class="nl">forComponent:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="n">componet</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">//0行目に配列の0番目の要素を設定</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="n">categoryArray</span> <span class="nl">objectAtIndex:</span><span class="n">row</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//選択されたピッカービューを取得</span>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">pickerView:</span><span class="p">(</span><span class="n">UIPickerView</span> <span class="o">*</span><span class="p">)</span><span class="n">pickerView</span> <span class="nl">didSelectRow:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="n">row</span> <span class="nl">inComponent:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="n">component</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">//0列目の選択している行番号を取得</span>
</span><span class='line'>    <span class="n">NSInteger</span> <span class="n">selectedRow</span> <span class="o">=</span> <span class="p">[</span><span class="n">pickerView</span> <span class="nl">selectedRowInComponent:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%d&quot;</span><span class="p">,</span> <span class="n">selectedRow</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>今回は、配列に格納されている要素をPicker Viewの行として表示</p>

<h2>参照</h2>

<ul>
<li><a href="http://araking56.blog134.fc2.com/blog-entry-200.html" title="ピッカービュー(UIPickerView)の使い方">ピッカービュー(UIPickerView)の使い方</a></li>
<li><a href="http://iphone-tora.sakura.ne.jp/uipickerview.html" title="iPhoneアプリ開発の虎の巻">iPhoneアプリ開発の虎の巻</a></li>
<li><a href="http://www.objectivec-iphone.com/UIKit/UIPickerView/UIPickerView.html" title="UIPickerViewの基本的な使い方">UIPickerViewの基本的な使い方</a></li>
</ul>


<!-- 参照 -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UIButton]]></title>
    <link href="http://masa2sei.github.com/blog/2013/02/21/uibutton/"/>
    <updated>2013-02-21T15:16:00+09:00</updated>
    <id>http://masa2sei.github.com/blog/2013/02/21/uibutton</id>
    <content type="html"><![CDATA[<p>UIButtonをプログラムで生成して表示する。</p>

<!-- more -->


<figure class='code'><figcaption><span> (UIButton.m)</span> <a href='http://masa2sei.github.com/downloads/code/2013-02-21-uibutton/UIButton.m'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//UIbuttonの生成</span>
</span><span class='line'><span class="n">UIButton</span><span class="o">*</span> <span class="n">btn</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIButton</span> <span class="nl">buttonWithType:</span><span class="n">UIButtonTypeRoundedRect</span><span class="p">];</span>
</span><span class='line'><span class="c1">//ボタンの表示位置とサイズの設定</span>
</span><span class='line'><span class="n">btn</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">30</span><span class="p">);</span>
</span><span class='line'><span class="c1">//ボタンのタイトル</span>
</span><span class='line'><span class="p">[</span><span class="n">btn</span> <span class="nl">setTitle:</span><span class="s">@&quot;ボタンのタイトル&quot;</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'><span class="c1">//ボタンがタッチダウンされたときに呼び出されるメソッドを設定</span>
</span><span class='line'><span class="p">[</span><span class="n">btn</span> <span class="nl">addTarget:</span><span class="n">self</span> <span class="nl">action:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">hoge:</span><span class="p">)</span>
</span><span class='line'>     <span class="nl">forControlEvents:</span><span class="n">UIControlEventTouchDown</span><span class="p">];</span>
</span><span class='line'><span class="c1">//サブビューに追加</span>
</span><span class='line'><span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">btn</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">//画像を指定したボタン</span>
</span><span class='line'><span class="n">UIImage</span><span class="o">*</span> <span class="n">img</span> <span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span><span class="s">@&quot;hoge&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">UIButton</span> <span class="o">*</span><span class="n">btn</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIButton</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">itinitWithFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">30</span><span class="p">)];</span>
</span><span class='line'><span class="c1">//背景に画像をセット</span>
</span><span class='line'><span class="p">[</span><span class="n">btn</span> <span class="nl">setBackgroundImage:</span><span class="n">img</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">btn</span> <span class="nl">addTarget:</span><span class="n">self</span>
</span><span class='line'>        <span class="nl">action:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">hoge:</span><span class="p">)</span> <span class="nl">forControlEvents:</span><span class="n">UIControlEventTouchUpInside</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// 呼ばれるhogeメソッド</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">hoge:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span><span class="p">{</span>
</span><span class='line'>        <span class="c1">// ここに何かの処理を記述する</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参照</h2>

<ul>
<li><a href="http://iphone-tora.sakura.ne.jp/uibutton.html" title="[iPhoneアプリ開発の虎の巻">iPhoneアプリ開発の虎の巻</a></li>
<li><a href="http://golog.plus.vc/iphone/6146/" title="プログラムで複数配置したUIButtonで、どのUIButtonが押されたか判別したい">プログラムで複数配置したUIButtonで、どのUIButtonが押されたか判別したい</a></li>
</ul>


<!-- 参照 -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOSでアニメーション]]></title>
    <link href="http://masa2sei.github.com/blog/2013/02/16/uiimageview/"/>
    <updated>2013-02-16T22:37:00+09:00</updated>
    <id>http://masa2sei.github.com/blog/2013/02/16/uiimageview</id>
    <content type="html"><![CDATA[<p>UIImageViewではアニメーションを実現できる。ようはパラパラマンガみたいな感じ。</p>

<!-- more -->


<figure class='code'><figcaption><span> (animationImages.m)</span> <a href='http://masa2sei.github.com/downloads/code/2013-02-16-22-37/animationImages.m'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//アニメーションの素材</span>
</span><span class='line'><span class="n">UIImage</span><span class="o">*</span> <span class="n">img0</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span><span class="s">@&quot;img0&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">UIImage</span><span class="o">*</span> <span class="n">img1</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span><span class="s">@&quot;img1&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">UIImage</span><span class="o">*</span> <span class="n">img2</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span><span class="s">@&quot;img2&quot;</span><span class="p">];</span>
</span><span class='line'><span class="n">NSArray</span><span class="o">*</span> <span class="n">imgArray</span>  <span class="o">=</span> <span class="p">[</span><span class="n">NSArray</span> <span class="nl">arrayWithObjects:</span><span class="n">img0</span><span class="p">,</span> <span class="n">img1</span><span class="p">,</span> <span class="n">img2</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//アニメーションのコマの設定</span>
</span><span class='line'><span class="n">UIImageView</span><span class="p">.</span><span class="n">animationImages</span> <span class="o">=</span> <span class="n">imgArray</span><span class="p">;</span>
</span><span class='line'><span class="c1">//アニメーションのリピート回数の設定（０は無限ループ）</span>
</span><span class='line'><span class="n">UIImageView</span><span class="p">.</span><span class="n">animationRepeatCount</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="c1">//コマの切り替わる時間の設定</span>
</span><span class='line'><span class="n">UIImageView</span><span class="p">.</span><span class="n">animationDuration</span> <span class="o">=</span> <span class="mf">2.0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">//アニメーションの再生</span>
</span><span class='line'><span class="p">[</span><span class="n">UIImageView</span> <span class="n">startAnimating</span><span class="p">]</span>
</span><span class='line'><span class="c1">//アニメーションの停止</span>
</span><span class='line'><span class="p">[</span><span class="n">UIImageView</span> <span class="n">stopAnimating</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参照</h2>

<ul>
<li><a href="http://iphone-tora.sakura.ne.jp/uiimageview.html" title="iPhoneアプリ開発の虎の巻">iPhoneアプリ開発の虎の巻</a></li>
</ul>


<!-- 参照 -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Emacsのカラーテーマの設定]]></title>
    <link href="http://masa2sei.github.com/blog/2013/02/05/emacs-color-theme/"/>
    <updated>2013-02-05T19:04:00+09:00</updated>
    <id>http://masa2sei.github.com/blog/2013/02/05/emacs-color-theme</id>
    <content type="html"><![CDATA[<p>Emacsのカラーテーマの設定をsolarizedにする。</p>

<ul>
<li>Emacs24以前</li>
</ul>


<p>color-themeをrequireする必要がある</p>

<p><strong> この辺の情報が役に立った </strong>  <br />
- <a href="http://blog.sanojimaru.com/post/19982182895/emacs-color-theme-solarized" title="[emacsでcolor-theme-solarizedを使う">emacsでcolor-theme-solarizedを使う</a></p>

<ul>
<li>Emacs24<br /></li>
</ul>


<p>(load-theme &#8216;solarized-dark t)でok</p>

<p><strong> この辺の情報が役に立った </strong>  <br />
- <a href="http://d.hatena.ne.jp/syohex/20121211/1355231365" title="Emacs 24以上を使うなら color-themeではなく、Emacsの themeフレームワークを使おう">Emacs 24以上を使うなら color-themeではなく、Emacsの themeフレームワークを使おう</a></p>

<h2>参照</h2>

<ul>
<li><a href="http://blog.sanojimaru.com/post/19982182895/emacs-color-theme-solarized" title="[emacsでcolor-theme-solarizedを使う">emacsでcolor-theme-solarizedを使う</a></li>
<li><a href="http://d.hatena.ne.jp/syohex/20121211/1355231365" title="Emacs 24以上を使うなら color-themeではなく、Emacsの themeフレームワークを使おう">Emacs 24以上を使うなら color-themeではなく、Emacsの themeフレームワークを使おう</a></li>
</ul>


<!-- 参照 -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressのカスタマイズ]]></title>
    <link href="http://masa2sei.github.com/blog/2013/02/03/customize-octopress/"/>
    <updated>2013-02-03T14:17:00+09:00</updated>
    <id>http://masa2sei.github.com/blog/2013/02/03/customize-octopress</id>
    <content type="html"><![CDATA[<h2>目次</h2>

<ol>
<li>サイドバーにタグクラウドを追加</li>
<li>新規ページを作成</li>
<li>「続きを読む」を表示</li>
</ol>


<!-- more -->


<h2>本論</h2>

<h3>1. サイドバーにタグクラウドを追加</h3>

<h5>プラグインのインストール</h5>

<p>tokkonopapaさんの<a href="https://github.com/tokkonopapa/octopress-tagcloud" title="octopress-tagcloud">octopress-tagcloud</a>を使わしてもらう。<br />
３つのファイル（tag_cloud.rb、category_list.html、tag_cloud.html）を以下のディレクトリにコピー。<br />
./plugins/tag_cloud.rb<br />
./source/<em>includes/custom/asides/category_list.html<br />
./source/</em>includes/custom/asides/tag_cloud.html</p>

<h4>CSSの編集</h4>

<p>./sass/custom/_styles.scssを以下のように編集</p>

<figure class='code'><figcaption><span> (_styles.scss)</span> <a href='http://masa2sei.github.com/downloads/code/_styles.scss'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="c1">// This File is imported last, and will override other styles in the cascade</span>
</span><span class='line'><span class="c1">// Add styles here to make changes without digging in too much</span>
</span><span class='line'><span class="nn">#tag-cloud</span> <span class="p">{</span>
</span><span class='line'>    <span class="na">line-height</span><span class="o">:</span> <span class="mi">2</span><span class="mf">.2</span><span class="kt">em</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>_config.ymlの編集</h4>

<pre><code>default_asides: [..., custom/asides/tag_cloud.html, custom/asides/tag_cloud.html]
</code></pre>

<p><strong> この辺の情報が役に立った </strong>  <br />
- <a href="http://tokkonopapa.github.com/blog/2012/01/04/octopress-plugin-for-categories-cloud/" title="Octopress用Tag Cloudプラグインをリリースします">Octopress用Tag Cloudプラグインをリリースします</a></p>

<h3>2. 新規ページを作成</h3>

<h4>ファイルの作成</h4>

<pre><code>$ bundle exec rake new_page['ファイル名']
</code></pre>

<h4>ナビゲーションの編集</h4>

<p>source/_includes/custom/navigation.htmlに新規作成したページへのリンクを追加</p>

<figure class='code'><figcaption><span> (navigation.html)</span> <a href='http://masa2sei.github.com/downloads/code/navigation.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">&quot;main-navigation&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;{{ root_url }}/&quot;</span><span class="nt">&gt;</span>Blog<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;{{ root_url }}/blog/archives&quot;</span><span class="nt">&gt;</span>Archives<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;{{ root_url }}/unix&quot;</span><span class="nt">&gt;</span>Unixコマンド<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;{{ root_url }}/git&quot;</span><span class="nt">&gt;</span>Gitコマンド<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;{{ root_url }}/emacs&quot;</span><span class="nt">&gt;</span>Emacs<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;{{ root_url }}/rails&quot;</span><span class="nt">&gt;</span>Rails<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'><span class="nt">&lt;/ul&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong> この辺の情報が役に立った </strong>  <br />
- <a href="http://qiita.com/items/4b9b6efd9d52d904986c" title="Octopressで新規ページを作成してみよう！">Octopressで新規ページを作成してみよう！</a></p>

<h3>3. 「続きを読む」を表示</h3>

<h4>_config.ymlをのexcerpt_linkを以下のように変更</h4>

<figure class='code'><figcaption><span> (_config.yml)</span> <a href='http://masa2sei.github.com/downloads/code/_config.yml'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">excerpt_link</span><span class="p-Indicator">:</span> <span class="s">&quot;続きを読む&quot;</span>  <span class="c1"># &quot;Continue reading&quot; link text at the bottom of excerpted articles</span>
</span></code></pre></td></tr></table></div></figure>


<h4>記事の編集</h4>

<p>記事を以下のように編集</p>

<pre><code># 上の内容までがトップページに表示 #
&lt;!-- more --&gt;
# 下の内容が個別の記事のページに表示 #
</code></pre>

<p><strong> この辺の情報が役に立った </strong>  <br />
- <a href="http://morizyun.github.com/blog/octopress-hatena-disqus-new-tab/" title="5分でできる簡単 Octopress セッティング">5分でできる簡単 Octopress セッティング</a></p>

<h2>参照</h2>

<ul>
<li><a href="https://github.com/tokkonopapa/octopress-tagcloud" title="octopress-tagcloud">octopress-tagcloud</a></li>
<li><a href="http://tokkonopapa.github.com/blog/2012/01/04/octopress-plugin-for-categories-cloud/" title="Octopress用Tag Cloudプラグインをリリースします">Octopress用Tag Cloudプラグインをリリースします</a></li>
<li><a href="http://qiita.com/items/4b9b6efd9d52d904986c" title="Octopressで新規ページを作成してみよう！">Octopressで新規ページを作成してみよう！</a></li>
<li><a href="http://morizyun.github.com/blog/octopress-hatena-disqus-new-tab/" title="5分でできる簡単 Octopress セッティング">5分でできる簡単 Octopress セッティング</a></li>
</ul>


<!-- 参照 -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails runnerを使ってみる]]></title>
    <link href="http://masa2sei.github.com/blog/2013/02/01/rails-rails-runner/"/>
    <updated>2013-02-01T16:43:00+09:00</updated>
    <id>http://masa2sei.github.com/blog/2013/02/01/rails-rails-runner</id>
    <content type="html"><![CDATA[<p>Railsでは、rails runnerコマンドでRubyファイルを直接実行できるらしい。</p>

<p>基本的にはこのサイトを参考にした<br />
- <a href="http://www.slowlydays.net/wordpress/?p=707" title="Rails3でバッチ処理を実行する">Rails3でバッチ処理を実行する</a></p>

<!-- more -->


<h3>1. libディレクトリのファイルへのパスの設定</h3>

<p>以下の設定をconfig/application.rbに追加。</p>

<pre><code>config.autoload_paths += %W(#{config.root}/lib)
</code></pre>

<h3>2. rails runnerコマンドで実行するプログラムの作成</h3>

<p>libの下に以下の内容でファイルを作成</p>

<figure class='code'><figcaption><span> (get_rss.rb)</span> <a href='http://masa2sei.github.com/downloads/code/get_rss.rb'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">Cron</span><span class="o">::</span><span class="no">GetRss</span>
</span><span class='line'>    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">get_rss</span>
</span><span class='line'>        <span class="c1"># 実行したい処理</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>参考にしたサイトではlib/tasksにファイルを作成していたが、lib以下ならどこでもいいらしい。<br />
lib/tasksには、独自のRakeタスクのみ置いた方がわかりやすいと思った。</p>

<p>なので、今回はlib/cron/get_rss.rbを作成。<br />
クラス名を上記のようにCron::GetRssにしないとrails runnerでエラーが起こる。<br />
たとえば、lib/pdf_stuff/receipt.rbなら、クラス名はPdfStuff::Receiptにする。</p>

<p><strong> この辺の情報が役に立った </strong>  <br />
- RailsによるアジャイルWebアプリケーション開発　第4版 245ページ</p>

<h3>3. 実行</h3>

<p>ターミナルでrails runnerコマンドを実行。</p>

<pre><code>rails runner Cron::GetRss.get_rss
</code></pre>

<h2>参照</h2>

<ul>
<li><a href="http://www.slowlydays.net/wordpress/?p=707" title="Rails3でバッチ処理を実行する">Rails3でバッチ処理を実行する</a></li>
<li>RailsによるアジャイルWebアプリケーション開発　第4版</li>
</ul>


<!-- 参照 -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Railsのアップデート]]></title>
    <link href="http://masa2sei.github.com/blog/2013/01/30/update-rails/"/>
    <updated>2013-01-30T23:29:00+09:00</updated>
    <id>http://masa2sei.github.com/blog/2013/01/30/update-rails</id>
    <content type="html"><![CDATA[<h2>メモ</h2>

<p>Ruby on Railsに深刻な脆弱製があり、修正バージョン（3.2.11）が公開されたということでRailsをアップデート。</p>

<ol>
<li>Gemfileにgem &#8216;rails&#8217;, &#8216;3.2.11&#8217;を記述</li>
<li>bundle updateコマンド</li>
</ol>


<p>以上。</p>

<!-- more -->


<h2>参照</h2>

<ul>
<li><a href="http://www.itmedia.co.jp/enterprise/articles/1301/10/news020.html" title="「Ruby on Rails」に極めて深刻な脆弱性、直ちにアップデートを">「Ruby on Rails」に極めて深刻な脆弱性、直ちにアップデートを</a></li>
</ul>


<!-- 参照 -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressで記事を投稿]]></title>
    <link href="http://masa2sei.github.com/blog/2013/01/25/blog-posts/"/>
    <updated>2013-01-25T21:49:00+09:00</updated>
    <id>http://masa2sei.github.com/blog/2013/01/25/blog-posts</id>
    <content type="html"><![CDATA[<h2>目次</h2>

<ol>
<li>_config.ymlの編集</li>
<li>markdownファイルの生成</li>
<li>記事を書く</li>
<li>デプロイ</li>
</ol>


<!-- more -->


<h2>本論</h2>

<h3>1. _config.ymlの編集</h3>

<p>ページのタイトルとか色々な設定は_config.ymlに記述する。</p>

<p><strong> この辺の情報が役に立った </strong>  <br />
- <a href="http://octopress.org/docs/configuring/" title="Octopress Configuring Octopress">Octopress Configuring Octopress</a></p>

<h3>2. markdownファイルの生成</h3>

<p>まず、記事の原稿となるmarkdownファイルを生成する。</p>

<pre><code>$ bundle exec rake new_post['Blog Title']
</code></pre>

<p>すると、source/_postsに2013-01-25-blog-title.markdownというファイルが生成される。</p>

<h3>3. 記事を書く</h3>

<p>とりあえず、記事のタイトルとカテゴリーを編集する。</p>

<pre><code>---
layout: post
title: "Octopressの環境構築"
date: 2013-01-25 14:35
comments: true
categories:
- Octopress
- 環境構築
---
</code></pre>

<p>あとは、markdownで記事を書く。</p>

<p><strong> この辺の情報が役に立った </strong>  <br />
- <a href="http://blog.2310.net/archives/6" title="Markdown文法の全訳">Markdown文法の全訳</a></p>

<h3>4. デプロイ</h3>

<p>記事を投稿するのは以下のコマンド</p>

<pre><code>$ bundle exec rake generate
$ bundle exec rake deploy
</code></pre>

<p>ちなみに、</p>

<pre><code>$ bundle exec rake gen_deploy
</code></pre>

<p>でもOK。</p>

<h2>参照</h2>

<ul>
<li><a href="http://kbaba1001.github.com/blog/2012/06/05/githubtooctopressdeburoguwohazimerufang-fa/" title="githubとOctopressでブログをはじめる方法">githubとOctopressでブログをはじめる方法</a></li>
<li><a href="http://octopress.org/docs/configuring/" title="Octopress Configuring Octopress">Octopress Configuring Octopress</a></li>
<li><a href="http://blog.2310.net/archives/6" title="Markdown文法の全訳">Markdown文法の全訳</a></li>
</ul>


<!-- 参照 -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressの環境構築]]></title>
    <link href="http://masa2sei.github.com/blog/2013/01/25/octopress/"/>
    <updated>2013-01-25T14:35:00+09:00</updated>
    <id>http://masa2sei.github.com/blog/2013/01/25/octopress</id>
    <content type="html"><![CDATA[<h2>目次</h2>

<ol>
<li>Dropbox内にOctopressのレポジトリをインストール</li>
<li>gemやらをインストール</li>
<li>GitHubにレポジトリを作成</li>
<li>GitHubにコミット</li>
</ol>


<!-- more -->


<h2>本論</h2>

<h3>1. Dropbox内にOctopressのレポジトリをインストール</h3>

<pre><code>$ cd Dropbox
$ git clone git://github.com/imathis/octopress.git octopress
</code></pre>

<h3>2. gemやらをインストール</h3>

<pre><code>$ cd octopress
$ gem install bundler
$ rbenv rehash
$ bundle install
</code></pre>

<p>bundle installで、RedClothがインストールできない。  <br />
　→gccがない？  <br />
Command Line Tools for Xcodeをインストールすれば解決。</p>

<p><strong> この辺の情報が役に立った </strong>  <br />
- <a href="http://qiita.com/items/9dd797f42e7bea674705" title="OS X で rbenv を使って ruby 1.9.3 の環境を作る">OS X で rbenv を使って ruby 1.9.3 の環境を作る</a>  <br>
- <a href="http://geisterchor.blogspot.jp/2012/02/macos-x-lion-xcode-43-gcc.html" title="MacOS X Lion + Xcode 4.3 での gcc">MacOS X Lion + Xcode 4.3 での gcc</a></p>

<p>あとは、rakeをインストールする。</p>

<pre><code>$ rake install
</code></pre>

<p>ここで、rake0.9.2.2を使いたいが、rake 10.0.3がアクティベートになってるとかでエラー。</p>

<pre><code>$ bundle exec rake install
</code></pre>

<p>これで、解決。</p>

<p><strong> この辺の情報が役に立った </strong>  <br />
- <a href="http://q.hatena.ne.jp/1353552605" title="rails にて bundle exec rake db:migrate の「bundle exec」を付けるのと付けないのとでの違いを教えて下さい">人力検索はてな</a></p>

<h3>3. GitHubにレポジトリを作成</h3>

<p>&#8216;masa2sei.github.com&#8217;という名前でレポジトリを作成。</p>

<h3>4. GitHubにコミット</h3>

<p>その後、</p>

<pre><code>$ bundle exec rake setup_github_pages
</code></pre>

<p>レポジトリのURLを聞かれるので&#8217;git@github.com:masa2sei/masa2sei.github.com.git&#8217;を指定。</p>

<p>あとは、</p>

<pre><code>$ bundle exec rake generate
$ bundle exec rake deploy
</code></pre>

<p><a href="http://masa2sei.github.com/" title="http://masa2sei.github.com/">http://masa2sei.github.com/</a>にページができているはず。</p>

<h2>参照</h2>

<ul>
<li><a href="http://qiita.com/items/06d8e447baee99163fc3" title="MacでOctopressをgithub pagesにセットアップするまでに行った事">MacでOctopressをgithub pagesにセットアップするまでに行った事</a></li>
<li><a href="http://kbaba1001.github.com/blog/2012/06/05/githubtooctopressdeburoguwohazimerufang-fa/" title="githubとOctopressでブログをはじめる方法">githubとOctopressでブログをはじめる方法</a></li>
<li><a href="http://tokkonopapa.github.com/blog/2011/12/30/octopress-on-github-and-bitbucket/" title="Octopressのインストールから運用管理まで">Octopressのインストールから運用管理まで</a></li>
<li><a href="http://qiita.com/items/9dd797f42e7bea674705" title="OS X で rbenv を使って ruby 1.9.3 の環境を作る">OS X で rbenv を使って ruby 1.9.3 の環境を作る</a></li>
<li><a href="http://geisterchor.blogspot.jp/2012/02/macos-x-lion-xcode-43-gcc.html" title="MacOS X Lion + Xcode 4.3 での gcc">MacOS X Lion + Xcode 4.3 での gcc</a></li>
<li><a href="http://q.hatena.ne.jp/1353552605" title="rails にて bundle exec rake db:migrate の「bundle exec」を付けるのと付けないのとでの違いを教えて下さい">人力検索はてな</a></li>
</ul>


<!-- 参照 -->

]]></content>
  </entry>
  
</feed>
